{"ast":null,"code":"var _jsxFileName = \"E:\\\\web1102\\\\\\u7B2C\\u56DB\\u9636\\u6BB5\\\\react\\\\reactdemo\\\\src\\\\pages\\\\refs\\\\ref.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Ref extends Component {\n  constructor() {\n    super();\n    this.red;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.refAdd,\n        children: \"\\u65B9\\u5F0F\\u4E09\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => this.change2(),\n        children: \"\\u4E09\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n  change() {\n    // 用法一:操作元素内容\n    this.refs.div.innerHTML = '<i>更改后的内容</i>';\n    this.refs.div.style.color = 'yellow';\n  }\n\n  change1() {\n    // 用法二，可以作为形参传递当前元素\n    console.log(this.add);\n  }\n\n  change2() {\n    // 用法二，可以作为形参传递当前元素\n    // console.log(this.refAdd);\n    console.log(this.refAdd.current);\n  }\n\n}","map":{"version":3,"sources":["E:/web1102/第四阶段/react/reactdemo/src/pages/refs/ref.jsx"],"names":["React","Component","Ref","constructor","red","render","refAdd","change2","change","refs","div","innerHTML","style","color","change1","console","log","add","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AACvCE,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,GAAL;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BAUI;AAAK,QAAA,GAAG,EAAE,KAAKC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAE,MAAI,KAAKC,OAAL,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AACDC,EAAAA,MAAM,GAAE;AACJ;AACA,SAAKC,IAAL,CAAUC,GAAV,CAAcC,SAAd,GAA0B,eAA1B;AACA,SAAKF,IAAL,CAAUC,GAAV,CAAcE,KAAd,CAAoBC,KAApB,GAA4B,QAA5B;AACH;;AACDC,EAAAA,OAAO,GAAE;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,GAAjB;AACH;;AACDV,EAAAA,OAAO,GAAE;AACL;AACA;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,MAAL,CAAYY,OAAxB;AACH;;AAnCsC","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Ref extends Component {\r\n    constructor(){\r\n        super();\r\n        this.red\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='alert alert-info'>\r\n                {/* 方式一 */}\r\n                {/* <div ref='div'>测试div</div> */}\r\n                {/* <button className='btn btn-success' onClick={()=>this.change()}>更改样式</button> */}\r\n\r\n                {/* 方式二 */}\r\n                {/* <div ref={dom=>this.add=dom}>方式二测试</div>\r\n                <button className='btn btn-success' onClick={()=>this.change1()}>二</button> */}\r\n\r\n                {/* 方式三 */}\r\n                <div ref={this.refAdd}>方式三测试</div>\r\n                <button className='btn btn-success' onClick={()=>this.change2()}>三</button>\r\n            </div>\r\n        )\r\n    }\r\n    change(){\r\n        // 用法一:操作元素内容\r\n        this.refs.div.innerHTML = '<i>更改后的内容</i>';\r\n        this.refs.div.style.color = 'yellow';\r\n    };\r\n    change1(){\r\n        // 用法二，可以作为形参传递当前元素\r\n        console.log(this.add);\r\n    };\r\n    change2(){\r\n        // 用法二，可以作为形参传递当前元素\r\n        // console.log(this.refAdd);\r\n        console.log(this.refAdd.current);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}